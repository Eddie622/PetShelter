{"version":3,"sources":["components/PetList.jsx","components/PetForm.jsx","components/EditPet.jsx","components/PetDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["PetList","useState","pets","setPets","useEffect","axios","get","then","res","console","log","data","catch","err","className","to","scope","map","pet","key","_id","name","pet_type","PetForm","setName","setPet_type","description","setDescription","skill_one","setSkill_one","skill_two","setSkill_two","skill_three","setSkill_three","errors","setErrors","onSubmit","e","preventDefault","petInput","post","navigate","type","onChange","target","value","properties","message","EditPet","props","put","PetDetails","likes","setLikes","onClick","delete","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.6bce97f2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\n\r\nconst PetList = () => {\r\n\r\n    const [pets, setPets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pet\")\r\n            .then(res => {\r\n                console.log(res);\r\n                setPets(res.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Link className=\"btn btn-info float-right\" to=\"/new\">New Pet</Link>\r\n            <h3>These pets are looking for a good home</h3>\r\n            <table className=\"table table-hover table-bordered\">\r\n                <thead className=\"bg-primary text-white\" >\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {pets.map((pet) =>\r\n                        <tr key={pet._id}>\r\n                            <td>{pet.name}</td>\r\n                            <td>{pet.pet_type}</td>\r\n                            <td><Link to={`/details/${pet._id}`}>Details</Link> | <Link to={`/edit/${pet._id}`}>Edit</Link></td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PetList;\r\n","import React, { useState } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst PetForm = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [pet_type, setPet_type] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill_one, setSkill_one] = useState(\"\");\r\n    const [skill_two, setSkill_two] = useState(\"\");\r\n    const [skill_three, setSkill_three] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    const CreatePet = e => {\r\n        e.preventDefault();\r\n        const petInput = {name, pet_type, description, skill_one, skill_two, skill_three};\r\n        axios.post(\"http://localhost:8000/api/pet\", petInput)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                } else {\r\n                    navigate(\"/\");\r\n                }\r\n            }).catch(err => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={CreatePet}>\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setName(e.target.value)}/>\r\n                    { errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Pet Type</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setPet_type(e.target.value)}/>\r\n                    { errors.pet_type ? <p className=\"text-danger\">{errors.pet_type.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <textarea className=\"form-control\" onChange={e => setDescription(e.target.value)}></textarea>\r\n                    { errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill_one</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setSkill_one(e.target.value)}/>\r\n                    { errors.skill_one ? <p className=\"text-danger\">{errors.skill_one.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill_two</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setSkill_two(e.target.value)}/>\r\n                    { errors.skill_two ? <p className=\"text-danger\">{errors.skill_two.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill_three</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setSkill_three(e.target.value)}/>\r\n                    { errors.skill_three ? <p className=\"text-danger\">{errors.skill_three.properties.message}</p> : \"\"}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-success btn-block\" value=\"Add Pet\"/>\r\n            </form>    \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PetForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst EditPet = props => {\r\n    const [name, setName] = useState(\"\");\r\n    const [pet_type, setPet_type] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill_one, setSkill_one] = useState(\"\");\r\n    const [skill_two, setSkill_two] = useState(\"\");\r\n    const [skill_three, setSkill_three] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect( () => {\r\n        axios.get(`http://localhost:8000/api/pet/${props._id}`)\r\n            .then( res => {\r\n                console.log(res);\r\n                setName(res.data.name);\r\n                setPet_type(res.data.pet_type);\r\n                setDescription(res.data.description);\r\n                setSkill_one(res.data.skill_one);\r\n                setSkill_two(res.data.skill_two);\r\n                setSkill_three(res.data.skill_three);\r\n            }).catch(errors => console.log(errors));\r\n    }, [props._id]);\r\n\r\n    const UpdatePet = e => {\r\n        e.preventDefault();\r\n        const petInput = {name, pet_type, description, skill_one, skill_two, skill_three};\r\n        axios.put(`http://localhost:8000/api/pet/${props._id}`, petInput)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                } else {\r\n                    navigate(\"/\");\r\n                }\r\n            }).catch(err => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={UpdatePet}>\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setName(e.target.value)} value={name}/>\r\n                    { errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Pet Type</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setPet_type(e.target.value)} value={pet_type}/>\r\n                    { errors.pet_type ? <p className=\"text-danger\">{errors.pet_type.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <textarea className=\"form-control\" onChange={e => setDescription(e.target.value)} value={description}></textarea>\r\n                    { errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill_one</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setSkill_one(e.target.value)} value={skill_one}/>\r\n                    { errors.skill_one ? <p className=\"text-danger\">{errors.skill_one.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill_two</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setSkill_two(e.target.value)} value={skill_two}/>\r\n                    { errors.skill_two ? <p className=\"text-danger\">{errors.skill_two.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill_three</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setSkill_three(e.target.value)} value={skill_three}/>\r\n                    { errors.skill_three ? <p className=\"text-danger\">{errors.skill_three.properties.message}</p> : \"\"}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-success btn-block\" value=\"Edit Pet\"/>\r\n            </form>    \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EditPet;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst PetDetails = props => {\r\n    const [name, setName] = useState(\"\");\r\n    const [pet_type, setPet_type] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill_one, setSkill_one] = useState(\"\");\r\n    const [skill_two, setSkill_two] = useState(\"\");\r\n    const [skill_three, setSkill_three] = useState(\"\");\r\n    const [likes, setLikes] = useState(0);\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/pet/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setName(res.data.name);\r\n                setPet_type(res.data.pet_type);\r\n                setDescription(res.data.description);\r\n                setSkill_one(res.data.skill_one);\r\n                setSkill_two(res.data.skill_two);\r\n                setSkill_three(res.data.skill_three);\r\n                setLikes(res.data.likes);\r\n            }).catch(errors => console.log(errors));\r\n    }, [props._id]);\r\n\r\n    const remove = _id => {\r\n        axios.delete(`http://localhost:8000/api/pet/${_id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                navigate(\"/\");\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-header bg-primary text-light\">\r\n                Details about: {name}\r\n                <button type=\"button\" onClick={e => remove(props._id)} className=\"btn btn-danger float-right\">Adopt {name}</button>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <p>Pet type: {pet_type}</p>\r\n                <p>Description: {description}</p>\r\n                <p>Skills: {skill_one} {skill_two} {skill_three}</p>\r\n                <div>\r\n                    Likes {likes}\r\n                    <button type=\"button\" onClick={() => setLikes(likes + 1)} className=\"btn btn-success ml-3\">Like</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default PetDetails;\r\n\r\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PetList from \"./components/PetList\";\nimport PetForm from './components/PetForm';\nimport { Link, Router } from '@reach/router';\nimport EditPet from './components/EditPet';\nimport PetDetails from './components/PetDetails';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>\n        Pet Shelter\n        <Link className=\"btn btn-info float-right mt-2\" to=\"/\">Home</Link>\n      </h1>\n      <Router className=\"my-5\">\n        <PetList path=\"/\" />\n        <PetForm path=\"/new\" />\n        <EditPet path=\"/edit/:_id\" />\n        <PetDetails path=\"/details/:_id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}